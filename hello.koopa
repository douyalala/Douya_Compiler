.data
.globl a_0
a_0:
.word 10

.text
.globl inc
inc:
addi sp, sp, -16
la t0, a_0
lw t0, 0(t0)
sw t0, 12(sp)
lw t0, 12(sp)
li t1, 1
add t0, t0, t1
sw t0, 8(sp)
lw t0, 8(sp)
la t1, a_0
sw t0, 0(t1)
la t0, a_0
lw t0, 0(t0)
sw t0, 4(sp)
lw a0, 4(sp)
addi sp, sp, 16
ret

.text
.globl print_a
print_a:
addi sp, sp, -16
sw ra, 12(sp)
la t0, a_0
lw t0, 0(t0)
sw t0, 8(sp)
lw a0, 8(sp)
call putint
sw a0, 4(sp)
li t0, 10
mv a0, t0
call putch
sw a0, 0(sp)
lw ra, 12(sp)
addi sp, sp, 16
ret

.text
.globl main
main:
addi sp, sp, -80
sw ra, 76(sp)
sw x0, 72(sp)
lw t0, 72(sp)
li t1, 10
slt t0, t0, t1
sw t0, 68(sp)
lw t0, 68(sp)
bnez t0, if_0
j else_0

if_0:
call inc
sw a0, 64(sp)
li t0, 1
sw t0, 60(sp)
lw t0, 60(sp)
li t1, 2
add t0, t0, t1
sw t0, 56(sp)
lw t0, 56(sp)
sw t0, 60(sp)
lw a0, 60(sp)
call putint
sw a0, 52(sp)
li t0, 10
mv a0, t0
call putch
sw a0, 48(sp)
call print_a
sw a0, 44(sp)
lw t0, 72(sp)
li t1, 1
add t0, t0, t1
sw t0, 40(sp)
lw t0, 40(sp)
sw t0, 72(sp)
j jump_0

jump_0:
lw t0, 72(sp)
li t1, 10
slt t0, t0, t1
sw t0, 36(sp)
lw t0, 36(sp)
bnez t0, if_0
j else_0

else_0:
li a0, 0
lw ra, 76(sp)
addi sp, sp, 80
ret
