decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @main(): i32 {
%entry:
@arr_2 = alloc [i32, 10]
%ptr0 = getelemptr @arr_2, 0
store 0, %ptr0
%ptr1 = getelemptr @arr_2, 1
store 0, %ptr1
%ptr2 = getelemptr @arr_2, 2
store 0, %ptr2
%ptr3 = getelemptr @arr_2, 3
store 0, %ptr3
%ptr4 = getelemptr @arr_2, 4
store 0, %ptr4
%ptr5 = getelemptr @arr_2, 5
store 0, %ptr5
%ptr6 = getelemptr @arr_2, 6
store 0, %ptr6
%ptr7 = getelemptr @arr_2, 7
store 0, %ptr7
%ptr8 = getelemptr @arr_2, 8
store 0, %ptr8
%ptr9 = getelemptr @arr_2, 9
store 0, %ptr9
@n_2 = alloc i32
%ptr10 = getelemptr @arr_2, 0
%0 = call @getarray(%ptr10)
store %0, @n_2
@i_2 = alloc i32
store 0, @i_2
%1 = load @i_2
%2 = lt %1, 10
br %2, %while_body_0, %while_end_0

%while_entry_0:
%3 = load @i_2
%4 = lt %3, 10
br %4, %while_body_0, %while_end_0

%while_body_0:
%5 = load @i_2
%6 = load @n_2
%7 = lt %5, %6
br %7, %if_1, %else_1

%if_1:
%8 = load @i_2
%ptr11 = getelemptr @arr_2, %8
%9 = load @i_2
%ptr12 = getelemptr @arr_2, %9
%10 = load %ptr12
%11 = load @i_2
%12 = add %10, %11
store %12, %ptr11
jump %end_1

%else_1:
%13 = load @i_2
%ptr13 = getelemptr @arr_2, %13
%14 = load @i_2
%15 = sub %14, 1
%ptr14 = getelemptr @arr_2, %15
%16 = load %ptr14
%17 = load @i_2
%18 = add %16, %17
store %18, %ptr13
jump %end_1

%end_1:
%19 = load @i_2
%20 = add %19, 1
store %20, @i_2
jump %while_entry_0

%while_end_0:
%21 = load @n_2
%ptr15 = getelemptr @arr_2, 0
call @putarray(%21, %ptr15)
ret 0
}
